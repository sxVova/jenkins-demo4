#!groovy
// Run docker build

properties([disableConcurrentBuilds()])

pipeline {
    agent {
        label 'master'
        }
    options {
        //buildDiscarder(logRotator(numToKeepStr: '1', artifactNumToKeepStr: '1'))
        timestamps()
    }
    stages {
    stage("clone") {
            steps {
                echo " ============== git clone repo =================="
                git branch: 'master',
                url: 'https://github.com/sxVova/microservices-demo.git'
            }
        }
	stage("test linter") {
            steps {
                echo " ============== start testing linters =================="
                sh """

                         # java -jar /checkstyle-8.30-all.jar -c /google_checks.xml ./src/adservice/*
                         # java -jar /checkstyle-8.30-all.jar -c /sun_checks.xml ./src/adservice/*

                         export GOROOT=/usr/local/go
                         export GOPATH=/var/lib/jenkins/workspace/demo4/go
                         export PATH=/usr/local/go/bin:/var/lib/jenkins/workspace/demo4/go/bin:$PATH
                         go get -u golang.org/x/lint/golint

                #         golint ./src/frontend/
                #         golint ./src/productcatalogservice/
                #         golint ./src/checkoutservice/

                         """
              echo " ============== end testing linters =================="
            }
        }
	stage("create docker image") {
            steps {
                echo " ============== start building image =================="
                //withCredentials([usernamePassword(credentialsId: 'gitlab_prod', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                        sh """
                          echo "y" | gcloud auth configure-docker
                          gcloud auth activate-service-account --key-file /key.json

                          docker build -t gcr.io/devops-259416/adservice:3  -f ./src/adservice/Dockerfile ./src/adservice/
                          docker push gcr.io/devops-259416/adservice:3

                          docker build -t gcr.io/devops-259416/frontend:3  -f ./src/frontend/Dockerfile ./src/frontend/
                          docker push gcr.io/devops-259416/frontend:3

                          docker build -t gcr.io/devops-259416/paymentservice:3  -f ./src/paymentservice/Dockerfile ./src/paymentservice/
                          docker push gcr.io/devops-259416/paymentservice:3
                        """
                //}
            }
        }

        // stage("deploy k8s") {
        //     steps {
        //         echo " ============== Make k8s deploy =================="
        //                 sh """
        //                   gcloud config set project devops-259416
        //                   export CLOUDSDK_CONTAINER_USE_CLIENT_CERTIFICATE=False
        //                   gcloud container clusters get-credentials demo --zone us-central1-a
        //                   kubectl apply -f ./microservices-demo/release/kubernetes-manifests.yaml
        //                 """
        //     }
        // }
        // stage("Remove repository") {
        //     steps {
        //         echo " ============== Remove microservice repository =================="
        //                 sh """
        //                   rm -rf *
        //                 """
        //     }
        // }
    }
}
